
Steps in doing an ns release:


0. do a {otcl,tclcl} release, if necessary (update configure to show
   current versions)

0.1. figure what the new version
0.2. send out release announcement to ns-developers for approval
    - describe what's new
0.3. Check to make sure conf/configure.in.{otcl,TclCL,tcl,tk}
     refer to the current versions
     (For example TclCL_VERS should match the most recent tclcl release,
     etc.)
     (re-autoconf ns if you change things in conf/*).
0.4. tag the revisions
0.5. update the web page
1. make sure test suites all pass
2. make sure that FILES is up-to-date
	(diff "ls -R | sort" aginst FILES
        don't add files which are generated)
2.1.  update CHANGES.html to show when the release happens
    (like the last time it was released)
2.2  make sure makefile.vc(WINDOWS) is up to date.
3.1 Update FILES; Remove files that are no longer needed and add the
    new ones
3.2 "make srctar"
4. test on new system
    (build, run test scripts)
5. put the tar in mash's /usr/mash/www/dist (?)
5. Make a hard link to ~ftp/dist/vint. (For people accessing 
    things via ftp.)
5.1. commit all your changes
5.2. tag the cvs archive
    (cd ~ns; cvs tag NS_2_1B6; )
6. update the web pages
7. send out the release announcement (ns-users, ns-announce)
   (also send to end2end if it's a non-{alpha,beta} release)
8. update the VERSION file to the next version
8.1. update CHANGES.html with a placeholder for comments for the new
    version
8.2 commit your changes to the VERSION and CHANGES.html for the next release

B. If making a ns-allinone release
1. check if all pkgs (tk,tcl, otcl,tclcl,ns, nam etc) are same as the
   current available version.
2. follow steps as above.
3. update install in the cvs under ~ns/allinone
