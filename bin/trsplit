eval 'exec perl -S $0 ${1+"$@"}'
    if 0;

#
# Contributed by Giao Nguyen, http://daedalus.cs.berkeley.edu/~gnguyen
#


sub Usage
{
    $0 =~ s/.*\/([^\/]+)$/$1/;
    print <<EOF;
Split ns trace file into files for individual connection
Usage:  $0 [options] files
options: -d   delim:  deliminator for spliting the data fields or columns
	 -c comment:  comment to print at the end along with total throughput
	 -psize size of packet in bytes
	 -tt	trace type
	 -pt	packet type
	 -ctt	trace type column
	 -cpt	packet type column
	 -ctime	time column
	 -csrc	source address column
	 -cdst	destination address column
EOF
    exit;
}

sub ParseArgv
{
    local($val);
    &Usage if ($#ARGV < 0);
    while ($_ = $ARGV[0], /^-/) {
	shift @ARGV;
	if (/^-d$/) {
	    $delim = shift @ARGV;
	}
	elsif (/^-c$/) {
	    $comment = shift @ARGV;
	}
	elsif (/^-(psize|tt|pt|ctt|ctime|csrc|cdst|cpt)$/) {
	    $argv = shift @ARGV;
	    s/-(\w+)/\$$1/;
	    eval "$_ = $argv";
	}
	else {
	    last;
	}
    }
}


$delim = " ";
$psize = 1000;
$tt = 'r';
$pt = 'ack';
$ctt = 1;
$ctime = 2;
$csrc = 3;
$cdst = 4;
$cpt = 5;
$cseq = 11;

&ParseArgv;
$ctt--; $ctime--;
$cpt--; $csrc--; $cdst--; $cseq--;


while (<>)
{
    chop;
    @col = split(/$delim/);

    next if ($col[0] ne $tt);
    next if ($col[$cpt] ne $pt);

    $src = $col[$csrc];
    $dst = $col[$cdst];
    $time{"$src.$dst"} = $col[$ctime];
    $seqno{"$src.$dst"} = $col[$cseq];

    if ($comment) {
	$fid = ($src << 16) + $dst;
	if (! $opened{$fid}) {
	    open($fid, ">$ARGV.$pt.$src.$dst");
	    $opened{$fid} = 1;
	}
	printf $fid "%0.6f\t%d\n", $col[$ctime], $col[$cseq];
    }
}


@keys_seqno = sort {$a <=> $b} (keys %seqno);
foreach $key (@keys_seqno) {
    $t = $time{$key};
    $s = $seqno{$key};
    $maxtime = $t  if ($t > $maxtime);
    $maxpkt += $s;
    printf("%s.%s\t%0.6f\t%d\t%0.6f\t%0.6f\n",
	   $pt, $key, $t, $s, $s/$t, 0.008 * $psize * $s/$t);
}

if ($comment) {
	printf(" %d\t%0.6f\t%s\n",
	       $#keys_seqno+1, 0.008 * $psize * $maxpkt / $maxtime, $comment);
}
